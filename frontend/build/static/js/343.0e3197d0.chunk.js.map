{"version":3,"file":"static/js/343.0e3197d0.chunk.js","mappings":"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","sources":["components/ThreadColumn/threads.jsx","pages/ThreadBox/thread.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Button, Img, Text } from \"components\";\nimport { Link } from \"react-router-dom\";\n\nconst Thread = (props) => {\n  const [thread1, setThread] = useState();\n\n  const cid = localStorage.getItem('cid');\n\n  const data = async () => {\n    const cloudflareUrl = `https://cloudflare-ipfs.com/ipfs/${cid}`;\n              const response = await fetch(cloudflareUrl);\n  \n              if (!response.ok) {\n                throw new Error(`Failed to fetch from IPFS. Status: ${response.status}`);\n              }\n  \n              const jsonData = await response.json();\n\n\n              const image = jsonData.image.replace('ipfs://', '');\n              const imageurl = `https://cloudflare-ipfs.com/ipfs/${image}`;\n\n              let userImageUrl = '';\n              if (jsonData.userimage) {\n                const userimage = jsonData.userimage.replace('ipfs://', '');\n                userImageUrl = `https://cloudflare-ipfs.com/ipfs/${userimage}`;\n\n                }\n              const dateObject = new Date(jsonData.date);\n              const hours = dateObject.getHours();\n              const minutes = dateObject.getMinutes();\n              const date = dateObject.toLocaleDateString([], { year: 'numeric', month: '2-digit', day: '2-digit' });\n            \n\n              setThread(() => [\n                { \n                  data: imageurl, \n                  userimage: userImageUrl,\n                  titleofprops: jsonData.description, \n                  description: jsonData.description,\n                  anasabdin: jsonData.username, \n                  education: 'Feeds', \n                  time: `${hours}:${minutes} ${date}`, \n                  repliescounter13: 'Replies Counter',\n                  anasabdinone10: 'Anas Abdin One',\n                  like: \"Like\",\n                  quote: \"Quote\",\n                  reply: \"Reply\",\n                },\n              ]);\n  }\n\n  useEffect(() => {\n    data();\n  }, []);\n\n\n    const handleShare = async () => {\n      try {\n        if (navigator.share) {\n          const item = thread1[0];\n          await navigator.share({title: item.anasabdin, text: thread1[0].description, url: thread1[0].data  });\n          console.log('Shared successfully');\n        } else {\n          console.log('Web Share API not supported');\n        }\n      } catch (error) {\n        console.error('Error sharing:', error.message);\n      }\n    };\n  \n\n  return (\n    <>\n      <div className={props.className}>\n      {Array.isArray(thread1) ? (\n        thread1.map((thread, index) => (\n        <div key={index} className=\"flex md:flex-col flex-row md:gap-5 items-center justify-evenly w-full\">\n          <div className=\"bg-gray-200 flex md:flex-1 flex-col items-center justify-start p-10 sm:px-5 w-[23%] md:w-full\">\n            {/* <Button className=\"bg-gray-600_01 cursor-pointer font-prompt font-semibold h-[73px] leading-[normal] mt-[35px] py-[21px] rounded-[5px] text-center text-white-A700 text-xl w-[73px]\">\n              {props?.b}\n            </Button> */}\n            <Img\n                  src={thread?.userimage}\n                  alt=\"Image Alt Text\"\n                  className=\"h-[46px] w-[46px] rounded-[10px]\"\n                />\n            <Text\n              className=\"mt-[11px] text-black-900 text-xl\"\n              size=\"txtPromptMedium20\"\n            >\n              {thread?.anasabdin}\n            </Text>\n            <Text\n              className=\"mb-[330px] text-teal-A400 text-xl\"\n              size=\"txtPromptSemiBold20\"\n            >\n              {thread?.anasabdin}\n            </Text>\n          </div>\n          <div className=\"flex md:flex-1 flex-col items-center justify-start w-[78%] md:w-full\">\n            <div className=\"bg-black-900 flex flex-row sm:gap-10 items-center justify-between p-5 w-full\">\n              <Text\n                className=\"text-[17px] text-teal-A400\"\n                size=\"txtPromptMedium17TealA400\"\n              >\n                {thread?.time}\n              </Text>\n              <div className=\"flex flex-row items-start justify-center mr-4\" onClick={handleShare}>\n                <Img\n                  onClick={handleShare}\n                  className=\"h-[22px] mt-[3px] cursor-pointer\"\n                  src=\"../images/img_search_teal_a400.svg\"\n                  alt=\"share\"\n                />\n                {/* <Img\n                  className=\"h-[22px] ml-[23px] mt-1\"\n                  src=\"../images/img_bookmark.svg\"\n                  alt=\"bookmark\"\n                /> */}\n                {/* <Text\n                  className=\"ml-5 sm:text-[17px] md:text-[19px] text-[21px] text-teal-A400\"\n                  size=\"txtPromptMedium21\"\n                >\n                  {thread?.one}\n                </Text> */}\n              </div>\n            </div>\n            <div className=\"bg-white-A700 flex flex-col gap-6 items-start justify-start max-w-[808px] p-5 w-full\">\n              <Text\n                className=\"text-2xl md:text-[22px] text-black-900 sm:text-xl\"\n                size=\"txtPromptRegular24\"\n              >\n                {thread?.description}\n              </Text>\n              <Img\n                  src={thread?.data}\n                  alt=\"Image Alt Text\"\n                  className=\"cursor-pointer h-[260px] w-[260px]\"\n                />\n              <div className=\"flex sm:flex-col flex-row sm:gap-5 items-center justify-start w-[51%] md:w-full\">\n                <Button\n                  className=\"bg-black-900 cursor-pointer flex items-center justify-center min-w-[109px] px-5 py-3.5 rounded-[7px]\"\n                  leftIcon={\n                    <div className=\"mr-[7px] bg-dark-A700 my-[3px]\">\n                      <Img src=\"../images/img_edit_white_a700.svg\" alt=\"edit\" />\n                    </div>\n                  }\n                >\n                  <div className=\"font-medium font-prompt leading-[normal] text-left text-lg text-white-A700\">\n                    {thread?.like}\n                  </div>\n                </Button>\n                <Button\n                  className=\"bg-black-900 cursor-pointer flex items-center justify-center min-w-[108px] sm:ml-[0] ml-[30px] px-3 py-3.5 rounded-[7px]\"\n                  leftIcon={\n                    <div className=\"h-[21px] mr-[7px] w-[21px] bg-dark-A700 my-[3px]\">\n                      <Img\n                        className=\"h-[21px]\"\n                        src=\"../images/img_grid.svg\"\n                        alt=\"grid\"\n                      />\n                    </div>\n                  }\n                >\n                  <div className=\"font-medium font-prompt leading-[normal] text-left text-lg text-white-A700\">\n                    {thread?.quote}\n                  </div>\n                </Button>\n                \n                  <Button\n                    className=\"bg-teal-A400 cursor-pointer flex items-center justify-center min-w-[108px] sm:ml-[0] ml-[31px] pl-[15px] pr-[11px] py-3.5 rounded-[7px]\"\n                    leftIcon={\n                      <div className=\"mt-px mb-[5px] mr-[7px] bg-dark-A700\">\n                        <Img src=\"../images/img_reply.svg\" alt=\"reply\" />\n                      </div>\n                    }\n                  >\n                    <div className=\"font-medium font-prompt leading-[normal] text-left text-lg text-white-A700\">\n                      {thread?.reply}\n                    </div>\n                  </Button>\n               \n              </div>\n            </div>\n          </div>\n        </div>\n          ))\n          ) : (\n            <div>No Feeds available</div>\n          )}\n      </div>\n    </>\n  );\n};\n\n/* Thread.defaultProps = {\n  b: \"B\",\n  anasabdin: \"@anasabdin\",\n  seniormember: \"Senior member\",\n  time: \"Today at 9pm\",\n  one: \"#1\",\n  description: (\n    <>\n      Lorem ipsum dolor sit amet consectetur. Platea nibh condimentum quisque\n      ultricies ut. Maecenas non dictum euismod proin morbi netus tellus. Enim\n      interdum massa morbi tellus pretium volutpat. Vitae sed ornare sit\n      ultricies pellentesque in netus mi nec. <br />\n      <br />\n      Lorem ipsum dolor sit amet consectetur. Platea nibh condimentum quisque\n      ultricies ut. Maecenas non dictum euismod proin morbi netus tellus. Enim\n      interdum massa morbi tellus pretium volutpat. Vitae sed ornare sit\n      ultricies pellentesque in netus mi nec.{\" \"}\n    </>\n  ),\n  like: \"Like\",\n  quote: \"Quote\",\n  reply: \"Reply\",\n}; */\n\nexport default Thread;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\n\n// import { Menu, MenuItem } from \"react-pro-sidebar\";\n\nimport { Img, List, Text } from \"components\";\nimport ThreadColumn from \"components/ThreadColumn/threads\";\n// import Sidebar11 from \"components/Sidebar11\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"components/Header2/navbar\";\n\n// import { CloseSVG } from \"../../assets/images\";\n\nconst Thread = () => {\n  const { cid } = useParams();\n  const [fdata, setfdata] = useState({});\n  const [time, settime] = useState();\n\n  localStorage.setItem('cid', cid);\n\n  const data = async () => {\n    const cloudflareUrl = `https://cloudflare-ipfs.com/ipfs/${cid}`;\n    const response = await fetch(cloudflareUrl);\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch from IPFS. Status: ${response.status}`);\n    }\n\n    const jsonData = await response.json();\n\n    setfdata(jsonData);\n\n    const dateObject = new Date(jsonData.date);\n    const hours = dateObject.getHours();\n    const minutes = dateObject.getMinutes();\n    const date = dateObject.toLocaleDateString([], { year: 'numeric', month: '2-digit', day: '2-digit' });\n    \n  \n    settime(` ${hours}:${minutes} ${date} `);\n\n  };\n\n  useEffect(() => {\n    data();\n  }, []);\n\n\n  return (\n    <>\n      <Navbar className=\"flex md:flex-col flex-row md:gap-5 items-center justify-center md:px-5 w-full\" />\n\n      <div className=\"bg-gray-100 flex flex-col font-prompt items-center justify-end mx-auto w-full\">\n        <div className=\"flex flex-col items-center justify-end w-full\">\n          <div className=\"flex md:flex-col flex-row gap-5 items-start justify-between mx-auto md:px-5 w-full\">\n            <div className=\"flex flex-1 flex-col gap-2.5 items-center justify-start pl-[9px] w-full\">\n              <div className=\"bg-gray-100 flex flex-col items-center justify-end pr-[17px] py-[17px] w-full\">\n                <div className=\"flex flex-col items-center justify-start mt-[50px] w-[98%] md:w-full\">\n                  <div className=\"flex sm:flex-col flex-row md:gap-10 items-start justify-between w-[99%] md:w-full\">\n                    <div className=\"flex flex-row items-start justify-between w-full\">\n                        <Img\n                          className=\"h-5 mt-0.5 w-5\"\n                          src=\"../images/img_user.svg\"\n                          alt=\"user\"\n                        />\n                        <Text\n                          className=\"text-[16.8px] text-blue_gray-400\"\n                          size=\"txtPromptMedium168\"\n                        >\n                          {fdata.username != null ? ` ${fdata.username} ` : ''}\n                        </Text>\n                      \n                        <Img\n                          className=\"h-6 w-6\"\n                          src=\"../images/img_clock.svg\"\n                          alt=\"clock\"\n                        />\n                        <Text\n                          className=\"text-[16.8px] text-blue_gray-400\"\n                          size=\"txtPromptMedium168\"\n                        >\n                            {time}\n                        </Text>\n                      </div>\n                    </div>                    \n                  </div>\n                  <div className=\"h-7 md:h-[31px] mt-[3px] w-full\">\n                    <div className=\"flex px-5 gap-8 sm:gap-[0.6rem] border border-solid border-teal-100 mt-auto mx-auto w-full md:h-7 h-[26px] m-auto\">\n                      <div className=\"flex items-center\">\n                        <Text\n                          className=\"text-[16.8px] sm:text-[14px] text-blue_gray-400\"\n                          size=\"txtPromptMedium168\"\n                        >\n                          Forum\n                        </Text>\n                        <Img\n                          className=\"h-5 sm:h-4\"\n                          src=\"../images/img_arrowright.svg\"\n                          alt=\"arrowright\"\n                        />\n                      </div>\n                      <div className=\"flex items-center\">\n                        <Text\n                          className=\"text-[16.8px] sm:text-[14px] text-blue_gray-400\"\n                          size=\"txtPromptMedium168\"\n                        >\n                          Feeds\n                        </Text>\n                        <Img\n                          className=\"h-5 sm:h-4\"\n                          src=\"../images/img_arrowright.svg\"\n                          alt=\"arrowright_One\"\n                        />\n                      </div>                      \n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex flex-col items-center justify-start w-[97%] md:w-full\">\n                <List\n                  className=\"flex flex-col gap-5 items-start w-auto\"\n                  orientation=\"vertical\"\n                >\n                  {new Array(1).fill({}).map((props, index) => (\n                    <React.Fragment key={`ThreadColumn${index}`}>\n                      <ThreadColumn\n                        className=\"flex flex-col items-center justify-start my-0 w-full\"\n                        {...props}\n                      />\n                    </React.Fragment>\n                  ))}\n                </List>\n              </div>\n            </div>\n          </div>\n        </div>\n    </>\n  );\n};\n\nexport default Thread;\n"],"names":["props","thread1","setThread","useState","cid","localStorage","getItem","useEffect","async","cloudflareUrl","concat","response","fetch","ok","Error","status","jsonData","json","image","replace","imageurl","userImageUrl","userimage","dateObject","Date","date","hours","getHours","minutes","getMinutes","toLocaleDateString","year","month","day","data","titleofprops","description","anasabdin","username","education","time","repliescounter13","anasabdinone10","like","quote","reply","handleShare","navigator","share","item","title","text","url","console","log","error","message","_jsx","_Fragment","children","className","Array","isArray","map","thread","index","_jsxs","Img","src","alt","Text","size","onClick","Button","leftIcon","Thread","useParams","fdata","setfdata","settime","setItem","Navbar","List","orientation","fill","React","ThreadColumn"],"sourceRoot":""}