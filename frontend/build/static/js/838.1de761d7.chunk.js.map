{"version":3,"file":"static/js/838.1de761d7.chunk.js","mappings":"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","sources":["components/Header/index.jsx","pages/Signup/signup.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { Img, Input, Text } from \"components\";\n\nimport { CloseSVG } from \"../../assets/images\";\nimport { Link, NavLink } from \"react-router-dom\";\n// import { useLocation } from \"react-router-dom\";\nimport { BiSearch } from \"react-icons/bi\";\n\nconst Header = ({ children }) => {\n  const [framesixvalue, setFramesixvalue] = React.useState(\"\");\n  const [openNav, setOpenNav] = useState(false);\n  const [userData, setUserData] = useState();\n\n  // const location = useLocation();\n\n  useEffect(() => {\n    const userDataParam = localStorage.getItem('userData');\n    if (userDataParam) {\n      const parsedUserData = JSON.parse(userDataParam);\n      setUserData(parsedUserData);\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"\">\n        <header className=\" flex justify-around md:justify-between items-center py-3 md:py-5 w-full\">\n          <div className=\"flex flex-col gap-[5px] mx-6 items-center md:mt-0 my-[7px] w-[5rem]\">\n          <a href=\"/\">\n            <Img\n              className=\"h-[43px] md:h-auto object-cover w-[4rem] \"\n              src=\"images/img_image3.png\"\n              alt=\"imageThree\"\n            />\n            <Text\n              className=\"text-[7.39px] text-teal-A400\"\n              size=\"txtPromptSemiBold739\"\n            >\n              SENCHAT\n            </Text>\n            </a>\n          </div>\n          <ul className=\"flex md:hidden justify-between items-center gap-2\">\n            \n          </ul>\n\n\n        </header>\n            \n\n        <div className=\"\">{children}</div>\n      </div>\n    </>\n  );\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { Button, Img, Input, Text } from \"components\";\nimport Header from \"components/Header/index\";\nimport { NFTStorage, File } from 'nft.storage';\nimport ContractABI from '../../utils/contractabi.json';\nimport { ConnectButton, useAccount, useParticleProvider } from '@particle-network/connect-react-ui';\nimport '@particle-network/connect-react-ui/dist/index.css';\nimport { isEVMProvider } from '@particle-network/connect';\nimport Web3 from 'web3';\nimport { sha256 } from 'js-sha256';\n\n\n\nconst Signup = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [filename, setFilename] = useState(null);\n  const [filetype, setFiletype] = useState(null);\n  const [isConnected, setIsConnected] = useState();\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errMessage, seterrMessage] = useState(null);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [rpc, setRpc] = useState();\n  const [chainId, setChainid] = useState();\n  const NFT_STORAGE_KEY = process.env.REACT_APP_NFT_STORAGE_KEY;\n  const nftcontract = process.env.REACT_APP_NFTCONTRACT;\n  const history = useNavigate();\n\n\n  const account = useAccount();\n  const provider = useParticleProvider();\n  console.log(provider);\n\n  useEffect(() => {\n    if (provider && isEVMProvider(provider)) {\n      window.web3 = new Web3(provider);\n    }\n  }, [provider]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (account) {\n          setIsConnected(true);\n        } else {\n          setIsConnected(false);\n        }\n      } catch (error) {\n        setIsConnected(false);\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n\n  }, [account]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!selectedFile && !filename) {\n        const imageOriginUrl = process.env.REACT_APP_LOGO;\n        const r = await fetch(imageOriginUrl);\n        const rb = await r.blob();\n        setSelectedFile(rb);\n        setFilename('senchatlogo.png');\n        setFiletype('image/png');\n      }\n    };\n    fetchData();\n  });\n\n\n  const handleFileChange = () => {\n    const doc = document.querySelector('input[type=\"file\"]');\n    setSelectedFile(doc.files[0]);\n    setFilename(doc.files[0].name);\n    setFiletype(doc.files[0].type);\n  };\n\n  const hashAccount = (account) => {\n    const hashedAccount = sha256(account.toString());\n    return hashedAccount;\n  };\n\n  const extractDigits = (text) => {\n    const numericalCharacters = text.match(/\\d/g);\n    if (!numericalCharacters) return '';\n    return numericalCharacters.join('');\n  };\n\n  const getFirst10Digits = (text) => {\n    return text.substring(0, 10);\n  };\n\n\n  const generateNonceAndSign = async () => {\n    setIsLoading(true);\n    if (isConnected) {\n      const hashedAccount = hashAccount(account);\n      const numericalCharacters = extractDigits(hashedAccount);\n      const big = getFirst10Digits(numericalCharacters);\n      console.log(numericalCharacters, big);\n\n\n      try {\n        await new window.web3.eth.Contract(ContractABI, nftcontract)\n          .methods.tokenURI(`1${big}`)\n          .call();\n\n        seterrMessage('Account Alread Exist and verified try signing in');\n      } catch (error) {\n        const reader = new FileReader();\n\n        reader.onload = async () => {\n          const content = reader.result;\n          const image = new File([new Uint8Array(content)], filename, { type: filetype });\n\n          const nftstorage = new NFTStorage({ token: NFT_STORAGE_KEY });\n\n          const signupData = {\n            image,\n            name: username,\n            description: `email: ${email}`,\n            address: account,\n            chainId: chainId\n          };\n\n          // Store data using NFT.Storage\n          const response = await nftstorage.store(signupData);\n\n          console.log(response);\n          try {\n            await new window.web3.eth.Contract(ContractABI, nftcontract)\n              .methods.userMint(account, `1${big}`, `${response.url}`)\n              .send({ from: account, value: window.web3.utils.toWei('0.0001', 'ether') });\n\n            setSuccessMessage('Successfully signed and verified');\n            setIsLoading(false);\n            history('/signin', { replace: true });\n          } catch (error) {\n            console.log(error);\n            setIsLoading(false);\n            seterrMessage(`Insufficient balance`);\n            nftstorage.delete(response.ipnft);\n            history('/signup', { replace: true });\n          }\n        };\n\n        reader.readAsArrayBuffer(selectedFile);\n      }\n    } else {\n      seterrMessage('Account Not Connected')\n      console.error('Account not connected');\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e) {\n      setUsername(e);\n    } else {\n      console.error('Invalid event or value:', e);\n    }\n  }\n  const handleChangeemail = (e) => {\n    if (e) {\n      setEmail(e);\n    } else {\n      console.error('Invalid event or value:', e);\n    }\n  }\n\n  return (\n    <div className=\"bg-gray-100 flex flex-col font-prompt gap-[33px] items-end justify-end mx-auto w-full\">\n      <div className=\"flex flex-col items-center w-full\">\n        <Header className=\"bg-white-A700 flex flex-col items-center justify-center md:px-5 w-full\" />\n      </div>\n      <div className=\"bg-white-A700 flex flex-col items-center justify-start p-[49px] md:px-5 rounded-bl-[70px] rounded-tl-[70px] w-[63%] md:w-full\">\n        <div className=\"flex flex-col gap-[5px] items-center justify-start w-[7%] md:w-full\">\n          <Img\n            className=\"h-[30px] md:h-auto object-cover\"\n            src=\"images/img_image3.png\"\n            alt=\"imageThree_One\"\n          />\n          <Text\n            className=\"text-[14.39px] text-teal-A400\"\n            size=\"txtPromptSemiBold739\"\n          >\n            SENCHAT\n          </Text>\n        </div>\n        <div className=\"flex flex-col gap-11 items-center justify-start w-full\">\n          <div className=\"flex flex-col gap-[17.51px] items-center justify-start w-auto\">\n            <Text\n              className=\"sm:text-[31.020000000000003px] md:text-[33.02px] text-[35.02px] text-black-900 w-auto\"\n              size=\"txtPromptSemiBold3502\"\n            >\n              Create Account\n            </Text>\n            <Text\n              className=\"text-[17.51px] text-gray-600 tracking-[0.18px] w-auto\"\n              size=\"txtPromptRegular1751\"\n            >\n              Let’s Get You Started\n            </Text>\n          </div>\n          <div className=\"flex flex-col gap-[21.88px] items-start justify-start w-full\">\n            <div className=\"flex flex-col gap-[8.75px] items-start justify-start w-full\">\n              <Text\n                className=\"text-[15.32px] text-gray-800 w-auto\"\n                size=\"txtPromptMedium1532\"\n              >\n                Username:\n              </Text>\n              <Input\n                name=\"frameFour\"\n                placeholder=\"Choose a username\"\n                className=\"leading-[normal] p-0 placeholder:text-gray-600 sm:pr-5 text-[15.32px] text-gray-600 text-left w-full\"\n                wrapClassName=\"border border-blue_gray-100 border-solid pl-[17px] pr-[35px] py-3 rounded-lg w-full\"\n                type=\"text\"\n                onChange={handleChange}\n              ></Input>\n            </div>\n            <div className=\"flex flex-col gap-[8.75px] items-start justify-start w-full\">\n              <Text\n                className=\"text-[15.32px] text-gray-800 w-auto\"\n                size=\"txtPromptMedium1532\"\n              >\n                Email\n              </Text>\n              <Input\n                name=\"frameFour_One\"\n                placeholder=\"Enter email\"\n                className=\"leading-[normal] p-0 placeholder:text-gray-600 text-[15.32px] text-gray-600 text-left w-full\"\n                wrapClassName=\"border border-blue_gray-100 border-solid pl-[17px] pr-3 py-3 rounded-lg w-full\"\n                type=\"email\"\n                onChange={handleChangeemail}\n              ></Input>\n            </div>\n            <Text\n              className=\"text-[15.32px] text-gray-800 w-auto\"\n              size=\"txtPromptMedium1532\"\n            >\n              Choose Profile Picture (optional i.e Senchat Logo will be choosed instead)\n            </Text>\n            <label className=\"text-[15.32px] text-gray-800 w-auto relative overflow-hidden border border-gray-300 px-3 py-2 rounded cursor-pointer\">\n              <span>Select a file</span>\n              <input\n                type=\"file\"\n                className=\"absolute inset-0 opacity-0\"\n                onChange={handleFileChange}\n              />\n            </label>\n            <p>{filename}</p>\n            <ConnectButton.Custom>\n              {({ account, chain, openAccountModal, openConnectModal, openChainModal }) => {\n                if (chain){\n                  setChainid(chain.id);\n                  console.log(chain.id);\n                  if (chain.rpcUrl === process.env.REACT_APP_RPC) {\n                    setRpc(true);\n                  } else {\n                    setRpc(false);\n                  }\n                }\n                \n\n                return (\n                  <div>\n                    {!account && (\n                      <Button\n                        onClick={openConnectModal}\n                        className=\"bg-teal-A400 cursor-pointer font-medium  w-[200%] py-[19px] rounded-[32px] text-[17.51px] text-black-900 text-center\"\n                      >\n                        Connect to web3\n                      </Button>\n                    )}\n                    {account && (\n                      <div className=\"flex justify-start\">\n                        <Button\n                          onClick={openAccountModal}\n                          className=\"bg-teal-A400 cursor-pointer font-medium leading-[normal] min-w-[50%] py-[19px] rounded-[32px] text-[17.51px] text-black-900 text-center\"\n                        >\n                          {`${account.slice(0, 10)}...${account.slice(-5)}`}\n                        </Button>\n\n                        <Button\n                          onClick={openChainModal}\n                          className=\"bg-teal-A400 cursor-pointer font-medium leading-[normal] min-w-[30%] py-[19px] rounded-[32px] text-[17.51px] text-black-900 text-center ml-8\"\n                        >\n                          {rpc ? (\n                            \"Network Connected\"\n                          ) : (\n                            \"Wrong Network\"\n                          )}\n\n                        \n                        </Button>\n                      </div>\n                    )}\n                  </div>\n\n                );\n\n              }}\n            </ConnectButton.Custom>\n\n\n            <Button\n              onClick={generateNonceAndSign}\n              className=\"bg-teal-A400 cursor-pointer font-medium leading-[normal] min-w-full py-[19px] rounded-[32px] text-[17.51px] text-black-900 text-center\"\n            >\n               {isLoading ? (\n                <div className=\"flex items-center justify-center\">\n                  <div className=\"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-gray-900\"></div>\n                </div>\n              ) : (\n                'Signup and Verify'\n              )}              \n            </Button>\n            {successMessage && (\n              <div className=\"text-green-600\">{successMessage}</div>\n            )}\n            {errMessage && (\n              <div className=\"text-red-600\">{errMessage}</div>\n            )}\n          </div>\n         \n        </div>\n        <div className=\"flex flex-row gap-[4.38px] items-center justify-start mb-4 mt-[27px] w-full\">\n          <Text\n            className=\"text-[15.32px] text-gray-600 w-full text-center\"\n            size=\"txtPromptMedium1532Gray600\"\n          >\n            Already have an account?{\" \"}\n          </Text>\n          <a\n            href=\"/signin\"\n            className=\"text-[15.32px] text-teal-A400 w-full text-center\"\n          >\n            <Text size=\"txtPromptMedium1532TealA400\">Sign in</Text>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"names":["Header","_ref","children","framesixvalue","setFramesixvalue","React","openNav","setOpenNav","useState","userData","setUserData","useEffect","userDataParam","localStorage","getItem","parsedUserData","JSON","parse","_jsx","_Fragment","_jsxs","className","href","Img","src","alt","Text","size","defaultProps","Signup","isLoading","setIsLoading","selectedFile","setSelectedFile","filename","setFilename","filetype","setFiletype","isConnected","setIsConnected","successMessage","setSuccessMessage","errMessage","seterrMessage","username","setUsername","email","setEmail","rpc","setRpc","chainId","setChainid","nftcontract","process","history","useNavigate","account","useAccount","provider","useParticleProvider","console","log","isEVMProvider","window","web3","Web3","async","error","fetchData","imageOriginUrl","r","fetch","rb","blob","Input","name","placeholder","wrapClassName","type","onChange","e","handleFileChange","doc","document","querySelector","files","ConnectButton","Custom","chain","openAccountModal","openConnectModal","openChainModal","id","rpcUrl","Button","onClick","concat","slice","hashedAccount","sha256","toString","hashAccount","numericalCharacters","text","match","join","extractDigits","big","substring","eth","Contract","ContractABI","methods","tokenURI","call","reader","FileReader","onload","content","result","image","File","Uint8Array","nftstorage","NFTStorage","token","signupData","description","address","response","store","userMint","url","send","from","value","utils","toWei","replace","delete","ipnft","readAsArrayBuffer"],"sourceRoot":""}