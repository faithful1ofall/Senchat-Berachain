{"version":3,"file":"static/js/888.eaa9344c.chunk.js","mappings":"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","sources":["components/PortfolioColumn/portfolioColumn.jsx","pages/Portfolio/porfolio.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Line, Text, Img, Button } from \"components\";\nimport ContractABI from '../../utils/contractabi.json';\nimport { ConnectButton, useParticleProvider } from '@particle-network/connect-react-ui';\nimport { isEVMProvider } from '@particle-network/connect';\nimport Web3 from 'web3';\n// import  ether from 'ethers';\nimport { NFTStorage } from 'nft.storage';\n\n\nconst PortfolioColumn = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [owner, setOwner] = useState();\n  const [threadData1, setthreadData] = useState([]);\n  const nftcontract = process.env.REACT_APP_NFTCONTRACT;\n\n  const provider = useParticleProvider();\n\n  useEffect(() => {\n    if (provider && isEVMProvider(provider)) {\n      \n      \n      window.web3 = new Web3(provider);\n\n      const web3 = window.web3; \n\n      const func = async (index) => {\n        try {\n          \n          const tokenId = await new web3.eth.Contract(ContractABI, nftcontract)\n          .methods.tokenOfOwnerByIndex(owner.toString(),`${index}`)\n          .call();\n          \n          const tokenURI = await new web3.eth.Contract(ContractABI, nftcontract)\n          .methods.tokenURI(`${tokenId}`)\n          .call();\n\n          const startsWithB2 = tokenId.toString().startsWith(\"2\")\n\n          if (startsWithB2) {\n            return {\n              tokenId,\n              tokenURI,\n            };\n          }\n\n          // Return the details or perform additional actions\n\n        } catch (error) {\n          console.error(`Error fetching details for token at index ${index}:`, error.message);\n          return null; // or throw the error if needed\n        }\n      };\n\n      const fetchAllTokenDetails = async (startIndex, endIndex) => {\n        const allTokenDetails = [];\n\n        // Create an array of promises for concurrent execution\n        const promises = Array.from({ length: endIndex - startIndex + 1 }, (_, i) => func(endIndex - i));\n\n        // Use Promise.all to wait for all promises to resolve\n        const results = await Promise.all(promises);\n\n        // Filter out null results (errors) and add valid results to the array\n        results.filter((result) => result !== null).forEach((result) => allTokenDetails.push(result));\n\n        return allTokenDetails;\n      }\n\n\n      const Total = async () => {\n        const totalSupply = await new web3.eth.Contract(ContractABI, nftcontract).methods.totalSupply().call();\n\n        const totalSupplyNumber = parseInt(totalSupply, 10);\n\n        const allTokenDetails = await fetchAllTokenDetails(0, totalSupplyNumber - 1);\n\n\n        //const threadData = [];\n\n        for (const tokenDetail of allTokenDetails) {\n\n\n          if (tokenDetail !== undefined && tokenDetail.tokenId !== undefined && tokenDetail.tokenURI !== undefined) {\n\n            const startsWithb3 = tokenDetail.tokenURI.startsWith(\"ipfs://\")\n            if (startsWithb3) {\n              try {\n                const hash = tokenDetail.tokenURI.replace('ipfs://', '');\n\n                const cloudflareUrl = `https://cloudflare-ipfs.com/ipfs/${hash}`;\n                const response = await fetch(cloudflareUrl);\n\n                if (!response.ok) {\n                  throw new Error(`Failed to fetch from IPFS. Status: ${response.status}`);\n                }\n\n                const jsonData = await response.json();\n\n\n                const image = jsonData.image.replace('ipfs://', '');\n                const imageurl = `https://cloudflare-ipfs.com/ipfs/${image}`;\n\n\n                let userImageUrl = '';\n                if (jsonData.userimage) {\n                  const userimage = jsonData.userimage.replace('ipfs://', '');\n                  userImageUrl = `https://cloudflare-ipfs.com/ipfs/${userimage}`;\n                }\n\n\n                const dateObject = new Date(jsonData.date);\n                const hours = dateObject.getHours();\n                const minutes = dateObject.getMinutes();\n                const date = dateObject.toLocaleDateString([], { year: 'numeric', month: '2-digit', day: '2-digit' });\n\n                setthreadData((prevData) => [\n                  ...prevData,\n                  {\n                    data: imageurl,\n                    titleofprops: jsonData.username,\n                    anasabdin: jsonData.description,\n                    education: 'Feeds',\n                    userimage: userImageUrl,\n                    time: `${hours}:${minutes} ${date}`,\n                    cid: hash,\n                    tid: tokenDetail.tokenId,\n                    repliescounter13: '',\n                    anasabdinone10: jsonData.username,\n                  },\n                ]);\n\n              } catch (error) {\n                console.error(`Error fetching from IPFS: ${error.message}`);\n              }\n            }\n          }\n        };\n\n      };\n      Total();\n\n    };\n  }, [ provider, owner ]);\n\n  const del = async (id, hashcid) => {\n    setIsLoading(true);\n    try {\n      const hash1 = hashcid.split('/').slice(-2, -1)[0];\n\n      const nftstorage = new NFTStorage({ token: process.env.REACT_APP_NFT_STORAGE_KEY });\n    \n    \n      if (provider && isEVMProvider(provider)) {\n        window.web3 = new Web3(provider);\n\n        const tokenId = await new window.web3.eth.Contract(ContractABI, nftcontract)\n      .methods.burn(id).send({ from:  `${owner.toString()}`});  \n\n     console.log(tokenId);\n\n     if (tokenId){\n      nftstorage.delete(hash1);\n      setIsLoading(false);\n      window.location.reload();\n     }\n  \n      }\n    } catch (error) {\n      setIsLoading(false);\n      console.error(`Error fetching details for token at index ${id}:`, error.message);\n    }\n  };\n\n\n\n\n  const extracttext = (text) => {\n    if (text.length <= 350) {\n      return text;\n    } else {\n      return text.substring(0, 350) + \"...\";\n    }\n  };\n\n\n  return (\n    <div className={props.className}>\n      <ConnectButton.Custom>\n            {({ account }) => {\n              if (account) {\n                setOwner(account);\n              }\n            }}\n          </ConnectButton.Custom>\n      {Array.isArray(threadData1) ? (\n        threadData1.map((thread, index) => (\n          <div key={index} className=\"flex flex-col gap-[20px] items-center w-full shadow-xl\">\n            <div>{thread.titleofthread}</div>\n            {/* <div>{thread.anasabdin}</div> */}\n            <div\n              \n              className=\"flex flex-1 md:flex-col flex-row gap-[16px] items-start justify-start max-w-[1039px] px-5 py-[15px] w-full\"\n            >\n             \n                {/*   <Button className=\"bg-blue_gray-100 cursor-pointer font-prompt font-semibold h-[46px] leading-[normal] py-[7px] rounded-[10px] text-black-900 text-center text-xl w-[46px]\">\n                  {thread?.p}\n                </Button> */}\n                <Img\n                  src={thread?.userimage}\n                  alt=\"Image Alt Text\"\n                  className=\"cursor-pointer h-[46px] w-[46px] rounded-[10px]\"\n                />\n\n              \n              <div className=\"flex md:flex-1 flex-col items-start justify-start w-[79%] md:w-full\">\n                <div className=\"flex flex-col items-start justify-start w-[71%] md:w-full\">\n                  <div className=\"flex flex-col items-center justify-start\">\n                  \n                    <Text\n                      className=\"text-[17px] text-black-900\"\n                      size=\"txtPromptSemiBold17\"\n                    >\n                      {thread?.titleofprops}\n                    </Text>\n                  </div>\n                  <div className=\"flex flex-row gap-[7px] items-center justify-between w-full\">\n                  <Link to={`/thread/${encodeURIComponent(thread.cid)}`}>\n                    <Text\n                      className=\"text-black-900 text-sm\"\n                      size=\"txtPromptMedium14\"\n                    >\n                      {extracttext(thread?.anasabdin)}\n\n                    </Text>\n                    </Link>\n\n                    {/* <Text\n                      className=\"text-teal-A400 text-sm\"\n                      size=\"txtPromptMedium14\"\n                    >\n                      {thread?.education}\n                    </Text> */}\n                    \n                  </div>\n                  <Text\n                    className=\"text-gray-500_02 text-sm\"\n                    size=\"txtPromptMedium14\"\n                  >\n                    {thread?.time}\n\n                  </Text>\n                </div>\n              </div>\n\n              <div className=\"flex md:flex-1 flex-col items-start justify-start pr-[3px] py-[3px] w-[14%] md:w-full\">\n                <div className=\"flex flex-row gap-4 items-end justify-start mb-1.5 w-[77%] md:w-full\">\n                  <Line className=\"bg-gray-500_02 py-3 h-12 w-px\" />\n                  <div className=\"flex flex-col items-start justify-start mt-1.5\">\n                    <Text\n                      className=\"text-gray-500_02 text-sm\"\n                      size=\"txtPromptMedium14\"\n                    >\n                      {thread?.repliescounter13}\n                    </Text>\n                    <Text\n                      className=\"text-gray-500_02 text-sm\"\n                      size=\"txtPromptMedium14\"\n                    >\n                      {thread?.anasabdinone10}\n                    </Text>\n                    <Button onClick={() => del(thread?.tid, thread?.cid)} className=\"bg-red-600 cursor-pointer font-semibold leading-[normal] mb-1 min-w-[146px] md:ml-[0] ml-[54px] md:mt-0 mt-[35px] py-3 rounded-[15px] text-[16.34px] text-black-900 text-center tracking-[-0.49px]\">\n                    {isLoading ? (\n                      <div className=\"flex items-center justify-center\">\n                        <div className=\"animate-spin rounded-full h-6 w-6 border-t-2 border-b-2 border-gray-900\"></div>\n                      </div>\n                    ) : (\n                      'DELETE'\n                    )}\n                    </Button>\n                  </div>\n                  \n                </div>\n              </div>\n            </div>\n            <Line className=\"self-center h-px bg-teal-100 w-full\" />\n          </div>\n        ))\n      ) : (\n        <div>No Feeds available</div>\n      )}\n    </div>\n  );\n};\nexport default PortfolioColumn;\n","import React, { useState, useEffect } from \"react\";\nimport { Img, Line,Text } from \"components\";\nimport PortCol from \"components/PortfolioColumn/portfolioColumn\"\nimport ContractABI from '../../utils/contractabi.json';\nimport { sha256 } from 'js-sha256';\nimport Web3 from 'web3';\nimport { isEVMProvider } from '@particle-network/connect';\nimport { ConnectButton, useParticleProvider, useAccount } from '@particle-network/connect-react-ui';\n\n\nconst Portfolio = () => {\n  const [owner, setOwner] = useState();\n  const [provider, setRpc] = useState();\n  const [count, setCount] = useState(0);\n  const nftcontract = process.env.REACT_APP_NFTCONTRACT;\n\n\n   useEffect(() => {\n    \n    const fetchData = async () => {\n\n       if (provider && isEVMProvider(provider)) {\n            window.web3 = new Web3(provider);\n            console.log(provider);\n\n\n\n            const func = async (index) => {\n              try {\n                const tokenId = await new window.web3.eth.Contract(ContractABI, nftcontract)\n                  .methods.tokenOfOwnerByIndex(owner.toString(), `${index}`)\n                  .call();\n            \n                const tokenURI = await new window.web3.eth.Contract(ContractABI, nftcontract)\n                  .methods.tokenURI(`${tokenId}`)\n                  .call();\n            \n                const startsWithB2 = tokenId.toString().startsWith(\"2\")\n            \n                if (startsWithB2) {\n                  return {\n                    tokenId,\n                    tokenURI,\n                  };\n                }\n            \n                return null; // Return null for tokens that don't start with '2'\n            \n              } catch (error) {\n                console.error(`Error fetching details for token at index ${index}:`, error.message);\n                return null; // or throw the error if needed\n              }\n            };\n            \n            const fetchAllTokenDetails = async (startIndex, endIndex) => {\n             \n            \n              const allTokenDetails = [];\n            \n              // Create an array of promises for concurrent execution\n              const promises = Array.from({ length: endIndex - startIndex + 1 }, (_, i) => func(endIndex - i));\n            \n              // Use Promise.all to wait for all promises to resolve\n              const results = await Promise.all(promises);\n            \n\n              results.filter((result) => result !== null).forEach((result) => allTokenDetails.push(result) );\n\n            \n              return allTokenDetails;\n            }\n\n            \n            const totalSupply = await new window.web3.eth.Contract(ContractABI, nftcontract).methods.totalSupply().call();\n\n            const totalSupplyNumber = parseInt(totalSupply, 10);\n    \n           const all = await fetchAllTokenDetails(0, totalSupplyNumber - 1);\n\n           setCount(all.length);\n\n            \n\n           /*  try {\n\n\n\n              const tokenId = await new window.web3.eth.Contract(ContractABI, nftcontract)\n                .methods.tokenOfOwnerByIndex(owner,`${count}`)\n                .call();\n\n                const startsWithB2 = tokenId.toString().startsWith(\"2\")\n\n              if (startsWithB2) {                \n                setCount(prevCount => prevCount + 1);\n                console.log(count);\n              }\n              setCount(prevCount => prevCount + 1);\n            } catch (error) {\n              console.log(count);\n              console.log(error);\n            } */\n          } \n    };\n    fetchData();\n  }, [ count, nftcontract, owner, provider ]);\n\n  return (\n    <>\n    \n     <div className=\"bg-gray-100 pt-6 sm:pt-10 flex flex-col font-prompt items-center justify-end mx-auto w-full\">\n        <div className=\"flex flex-col items-center justify-end w-full\">\n          <ConnectButton.Custom>\n            {({ account, chain }) => {\n              if (chain) {\n                setRpc(chain.rpcUrl);\n                setOwner(account);\n              };       \n            }}\n          </ConnectButton.Custom>\n         \n          {/* <List\n            className=\"sm:flex-col flex-row gap-[22px] grid md:grid-cols-1 grid-cols-2 justify-center max-w-[1421px] mx-auto md:px-5 w-full\"\n            orientation=\"horizontal\"\n          > */}\n            <div className=\"sm:h-[30rem] h-[] md:h-[2054px] sm:ml-[0] relative w-full\">\n              \n              <div className=\"absolute bg-gray-100 flex flex-col inset-x-[0] items-center justify-start mx-auto pb-[17px] pl-[17px] top-[0] w-full\">\n                <div className=\"flex flex-col items-start justify-start w-full\">\n                \n                  <div className=\"flex flex-col items-start justify-start mt-[46px] p-1 w-full\">\n                    <Text\n                      className=\"mb-[22px] mt-[17px] sm:text-4xl md:text-[38px] text-[40px] text-black-900\"\n                      size=\"txtPromptBold40\"\n                    >\n                      Portfolio Overview\n                    </Text>\n                  </div>\n                  <div className=\"flex md:flex-col flex-row md:gap-8 items-end justify-start mt-[5px] w-[81%] md:w-full\">\n                    <div className=\"flex flex-col gap-[7px] items-start justify-start\">\n                      <Text\n                        className=\"text-2xl md:text-[22px] text-blue_gray-900_01 sm:text-xl\"\n                        size=\"txtPromptSemiBold24Bluegray90001\"\n                      >\n                        Wallet Balance (SenTokens)\n                      </Text>\n                      <Text\n                        className=\"sm:text-[21.5px] md:text-[23.5px] text-[25.5px] text-blue_gray-400\"\n                        size=\"txtPromptSemiBold255Bluegray400\"\n                      >\n                         Earn Points Through Activities\n                      </Text> \n                    </div>\n                    <div className=\"flex flex-row gap-2 items-center justify-center mb-0.5 ml-0.5 md:ml-[0] md:mt-0 mt-12 w-[27%] md:w-full\">\n                      <Img\n                        className=\"h-[22px]\"\n                        src=\"images/img_send.svg\"\n                        alt=\"send\"\n                      />\n                      <Text\n                        className=\"sm:text-[21.5px] md:text-[23.5px] text-[25.5px] text-blue_gray-400\"\n                        size=\"txtPromptSemiBold255Bluegray400\"\n                      >\n                        {count/100}\n                      </Text>\n                    </div>\n                     {/* <Button className=\"bg-teal-A400 cursor-pointer font-semibold leading-[normal] mb-1 min-w-[146px] md:ml-[0] ml-[54px] md:mt-0 mt-[35px] py-3 rounded-[15px] text-[16.34px] text-black-900 text-center tracking-[-0.49px]\">\n                      DEPOSIT\n                    </Button>\n                    <Button className=\"border border-blue_gray-400 border-solid cursor-pointer font-semibold leading-[normal] mb-1 min-w-[146px] ml-4 md:ml-[0] md:mt-0 mt-[35px] py-3 rounded-[15px] text-[16.34px] text-blue_gray-400 text-center tracking-[-0.49px]\">\n                      WITHDRAWAL\n                    </Button> */} \n                  </div>\n                  <Line className=\"bg-teal-100 h-[3px] mt-7 w-full\" />\n                  <PortCol className=\"flex flex-col bg-white-A700 gap-[19.03px] items-start justify-start w-full\" />\n                  </div>\n              </div>\n            </div>\n            \n         {/*  </List> */}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Portfolio;\n"],"names":["props","isLoading","setIsLoading","useState","owner","setOwner","threadData1","setthreadData","nftcontract","process","provider","useParticleProvider","useEffect","isEVMProvider","window","web3","Web3","func","async","tokenId","eth","Contract","ContractABI","methods","tokenOfOwnerByIndex","toString","concat","index","call","tokenURI","startsWith","error","console","message","fetchAllTokenDetails","startIndex","endIndex","allTokenDetails","promises","Array","from","length","_","i","Promise","all","filter","result","forEach","push","totalSupply","totalSupplyNumber","parseInt","tokenDetail","undefined","hash","replace","cloudflareUrl","response","fetch","ok","Error","status","jsonData","json","image","imageurl","userImageUrl","userimage","dateObject","Date","date","hours","getHours","minutes","getMinutes","toLocaleDateString","year","month","day","prevData","data","titleofprops","username","anasabdin","description","education","time","cid","tid","repliescounter13","anasabdinone10","Total","_jsxs","className","children","_jsx","ConnectButton","Custom","_ref","account","isArray","map","thread","titleofthread","Img","src","alt","Text","size","Link","to","encodeURIComponent","text","substring","Line","Button","onClick","id","hashcid","hash1","split","slice","nftstorage","NFTStorage","token","burn","send","log","delete","location","reload","del","Portfolio","setRpc","count","setCount","fetchData","_Fragment","chain","rpcUrl","PortCol"],"sourceRoot":""}